> 0.0 1.687669 1.686495 1.690184 # size:10000:sctp:
> 1.0 1.827723 1.686438 3.516574 # size:10000:sctp:
> 2.0 2.070434 1.687349 6.226663 # size:10000:sctp:
> 3.0 2.063306 1.686454 3.683095 # size:10000:sctp:
> 4.0 1.886649 1.686548 3.239338 # size:10000:sctp:
> 5.0 2.395259 1.686399 6.238275 # size:10000:sctp:
> 6.0 2.837454 2.239354 5.335183 # size:10000:sctp:
> 
> [...]
> 
> set multiplot
> set title '10000 byte transfer'
> set data style boxerrorbars
> set key left top Left title 'legend' width 4 box 3
> plot 'xxx.sctp.10000' smooth be title ' sctp ' ,  \
> 'xxx.tcp.10000' smooth be title ' tcp '
> 
> [...]
>
> Now my query to you is there any way I can get use of the low/high 
> mark.. I have tried
> errorbars and various other options.. 

errorbars works for me.

I copied the above data into "rrs.dat" and then used the following
bit of gnuplot input...

set term post landscape  "Times-Roman" 12
plot  "rrs.dat" with errorbars 

I am using gnuplot 3.7 patchlevel 1 (from freebsd pkgs).

I didn't start with your gnuplot input because I don't actually
understand gnuplot input files and so don't really understand your
file at all.  When I was in grad school I decided that gnuplot was
nice but that I needed a way to generate quick plots without the
overhead of writing those dumb command files.  So, I wrote a (very
ugly) wrapper.  So, I did...

    gpthis -g -t errorbars rrs.dat

and it left me with a nice graph.ps file (i.e., do not plot on a
grid (-g) and use errorbars as the "type" of plot and plot the file
"rrs.dat").  And, then...

    gpthis -c -g -t errorbars rrs.dat

To have it leave behind the gnuplot command file it used (so I could
insert it into this email).

You can grab a copy of my script from:

    http://roland.grc.nasa.gov/~mallman/software/

(There is also another handy tool in there called "stats" that you
might find useful.  It basically takes a column of numbers and does
some basic stats on them (mean, median, standard deviation, etc.).
It will do other manipulations, too.  But, it is damn handy to be
able to say "stats -n -bmean data_file" and just get the mean spit
back at you.)

YMMV.

allman

